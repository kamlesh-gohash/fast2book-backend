name: Build, Push, and Deploy to AWS ECR

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: self-hosted # Use 'ubuntu-latest' if not on self-hosted runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Environment Variables
        id: set-env
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}" >> $GITHUB_ENV
          echo "AWS_REGION=${{ secrets.AWS_REGION_ECR }}" >> $GITHUB_ENV
          echo "AWS_ECR=${{ secrets.AWS_ECR }}" >> $GITHUB_ENV

      - name: Debug Environment Variables
        run: |
          echo "AWS_REGION: $AWS_REGION"
          echo "AWS_ECR: $AWS_ECR"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION_ECR }}

      - name: Build Docker image
      run: |
        docker buildx build --no-cache \
          --build-arg DATABASE_NAME="${{ secrets.DATABASE_NAME }}" \
          --build-arg DATABASE_URL="${{ secrets.DATABASE_URL }}" \
          --build-arg DEBUG="${{ secrets.DEBUG }}" \
          --build-arg GOOGLE_CLIENT_ID="${{ secrets.GOOGLE_CLIENT_ID }}" \
          --build-arg GOOGLE_CLIENT_SECRET="${{ secrets.GOOGLE_CLIENT_SECRET }}" \
          --build-arg SECRET_KEY="${{ secrets.SECRET_KEY }}" \
          --build-arg AWS_S3_BUCKET_NAME="${{ secrets.AWS_S3_BUCKET_NAME }}" \
          --build-arg EMAIL_HOST="${{ secrets.EMAIL_HOST }}" \
          --build-arg EMAIL_PASSWORD="${{ secrets.EMAIL_PASSWORD }}" \
          --build-arg EMAIL_PORT="${{ secrets.EMAIL_PORT }}" \
          --build-arg EMAIL_USER="${{ secrets.EMAIL_USER }}" \
          --build-arg FRONT_URL="${{ secrets.FRONT_URL }}" \
          --build-arg GOOGLE_REDIRECT_URI="${{ secrets.GOOGLE_REDIRECT_URI }}" \
          --build-arg PORT="${{ secrets.PORT }}" \
          -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$AWS_ECR:latest .
        
      - name: Push Docker image to AWS ECR
        run: |
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$AWS_ECR:latest

      - name: Create Docker Network
        run: |
          docker network create fast2book-network || true

      - name: Deploy Container Locally
        run: |
          # Stop and remove existing container if it exists
          if [ $(docker ps -aq -f name=fast2book-backend-container) ]; then
            docker stop fast2book-backend-container
            docker rm fast2book-backend-container
          fi

          # Pull the latest image from ECR
          docker pull $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$AWS_ECR:latest

          # Run the new container
          docker run -d \
            --name fast2book-backend-container \
            --network fast2book-network \
            -p 5000:5000 \
            -e DATABASE_NAME=${{ secrets.DATABASE_NAME }} \
            -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
            -e DEBUG=${{ secrets.DEBUG }} \
            -e GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} \
            -e GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }} \
            -e SECRET_KEY=${{ secrets.SECRET_KEY }} \
            -e AWS_S3_BUCKET_NAME=${{ vars.AWS_S3_BUCKET_NAME }} \
            -e EMAIL_HOST=${{ vars.EMAIL_HOST }} \
            -e EMAIL_PASSWORD=${{ vars.EMAIL_PASSWORD }} \
            -e EMAIL_PORT=${{ vars.EMAIL_PORT }} \
            -e EMAIL_USER=${{ vars.EMAIL_USER }} \
            -e FRONT_URL=${{ vars.FRONT_URL }} \
            -e GOOGLE_REDIRECT_URI=${{ vars.GOOGLE_REDIRECT_URI }} \
            -e PORT=${{ vars.PORT }} \
            $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$AWS_ECR:latest
